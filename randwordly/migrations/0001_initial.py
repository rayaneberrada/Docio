# Generated by Django 3.0.6 on 2020-06-18 08:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=2000)),
                ('exemple', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'db_table': 'definition',
            },
        ),
        migrations.CreateModel(
            name='Mot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orthographe', models.CharField(max_length=300)),
                ('nature_grammaticale', models.CharField(max_length=255)),
                ('genre', models.CharField(blank=True, max_length=10, null=True)),
                ('etymologie', models.CharField(max_length=5000)),
            ],
            options={
                'db_table': 'mot',
            },
        ),
        migrations.CreateModel(
            name='UniteTerminologique',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'unite_terminologique',
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=20)),
                ('mail', models.CharField(max_length=40)),
                ('mot_de_passe', models.CharField(max_length=40)),
                ('date_inscription', models.DateTimeField()),
            ],
            options={
                'db_table': 'utilisateur',
            },
        ),
        migrations.CreateModel(
            name='TermeDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Definition')),
                ('terme', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.UniteTerminologique')),
            ],
            options={
                'db_table': 'terme_definition',
            },
        ),
        migrations.CreateModel(
            name='Synonyme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('syn_reference', models.ForeignKey(db_column='syn_reference', on_delete=django.db.models.deletion.DO_NOTHING, related_name='syn_reference', to='randwordly.Mot')),
                ('syonyme', models.ForeignKey(db_column='syonyme', on_delete=django.db.models.deletion.DO_NOTHING, related_name='synonyme', to='randwordly.Mot')),
            ],
            options={
                'db_table': 'synonyme',
            },
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reponse', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('taux_validation', models.IntegerField()),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Definition')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Utilisateur')),
            ],
            options={
                'db_table': 'reponse',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, max_length=2000, null=True)),
                ('mot', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Mot')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Utilisateur')),
            ],
            options={
                'db_table': 'note',
            },
        ),
        migrations.CreateModel(
            name='ListeApprentissage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('mot', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Mot')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Utilisateur')),
            ],
            options={
                'db_table': 'liste_apprentissage',
            },
        ),
        migrations.AddField(
            model_name='definition',
            name='mot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='randwordly.Mot'),
        ),
        migrations.CreateModel(
            name='Antonyme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ant_reference', models.ForeignKey(db_column='ant_reference', on_delete=django.db.models.deletion.DO_NOTHING, related_name='ant_reference', to='randwordly.Mot')),
                ('antonyme', models.ForeignKey(db_column='antonyme', on_delete=django.db.models.deletion.DO_NOTHING, related_name='antonyme', to='randwordly.Mot')),
            ],
            options={
                'db_table': 'antonyme',
            },
        ),
    ]
